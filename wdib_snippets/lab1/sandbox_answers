1. 
do wyświetlenia wskazania:
ll /proc/self/root

kod, plik chroot_trial.c:
#include <unistd.h>
#include <stdio.h>
#include <stdlib.h>
#include <sys/stat.h>

int main(){
    
    mkdir("foo", 0755);
    chroot("foo");
    chroot("../../../../../../../../../../../../../../../..");
    return execl("/bin/sh", "-i", NULL);
}

do odpalenia powyższego:
gcc -o chroot_trial chroot_trial.c 
./chroot_trial

2. 
Żeby zobaczyć jakie program p z argumentami args wykorzystuje wywołania systemowe:

sudo strace -c -f -S name p args 2>&1 1>/dev/null | tail -n -2 | head -n +3 
^ jakiś output

potem w kodzie dla każdego x <- output:

#include <stdlib.h>
#include <stdio.h>
#include <seccomp.h>
#include <fcntl.h>
#include <sys/stat.h>
#include <sys/types.h>
#include <stddef.h>
#include <err.h>
#include <unistd.h>
#include <signal.h>

#define ADD(x)\
    seccomp_rule_add(ctx, SCMP_ACT_ALLOW, SCMP_SYS(x), 0)


int main(int argc, char* argv[], char *envp[]){
    scmp_filter_ctx ctx = seccomp_init(SCMP_ACT_KILL);
    
    ADD(write);
    ADD(read);
    ADD(fstat);
    ADD(mmap);
    ADD(rt_sigaction);
    ADD(rt_sigprocmask);
    ADD(rt_sigreturn);
    ADD(clone);
    ADD(wait4);
    ADD(execve);
    ADD(exit_group); //dotąd programy korzystające z stdin stdout i stderr

    ADD(...); //to do rozbudowy
    ...
    seccomp_load(ctx);
    
    //jakiś kod który testuje sandboxa

    seccomp_release(ctx);

}


3.
a) plik /var/run/docker.sock jest domyślnym socketem unixowym na którym nasłuchuje daemon Dockera, i może być wykorzystywany do komunikacji z dameonem wewnątrz określonego kontera.

