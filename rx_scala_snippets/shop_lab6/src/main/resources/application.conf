
akka {
  loglevel = "DEBUG"
  actor {
//    provider = "akka.remote.RemoteActorRefProvider"
    provider = "akka.cluster.ClusterActorRefProvider"
    debug {
      receive = on
    }
  }
  remote {
//    enabled-transports = ["akka.remote.netty.tcp"]
    netty.tcp {
      hostname = "192.168.0.101"
    }
  }
  cluster {
    seed-nodes = [
//      "akka.tcp://RemoteSystem@192.168.0.107:2552"
      "akka.tcp://RemoteSystem@192.168.0.107:2552"
    ]
    # auto downing is NOT safe for production deployments.
    # you may want to use it during development, read more about it in the docs.
    #
    auto-down-unreachable-after = 10s
  }
}
akka.extensions = ["akka.cluster.pubsub.DistributedPubSub"]
akka.persistence.journal.leveldb.native = off
akka.persistence.journal.plugin = "akka.persistence.journal.leveldb"
akka.persistence.snapshot-store.plugin = "akka.persistence.snapshot-store.local"
akka.persistence.journal.leveldb.dir = "target/journal"
akka.persistence.snapshot-store.local.dir = "target/snapshots"

akka.cluster.pub-sub {
  # Actor name of the mediator actor, /system/distributedPubSubMediator
  name = distributedPubSubMediator

  # Start the mediator on members tagged with this role.
  # All members are used if undefined or empty.
  role = ""

  # The routing logic to use for 'Send'
  # Possible values: random, round-robin, broadcast
  routing-logic = random

  # How often the DistributedPubSubMediator should send out gossip information
  gossip-interval = 1s

  # Removed entries are pruned after this duration
  removed-time-to-live = 120s

  # Maximum number of elements to transfer in one message when synchronizing the registries.
  # Next chunk will be transferred in next round of gossip.
  max-delta-elements = 3000

  # When a message is published to a topic with no subscribers send it to the dead letters.
  send-to-dead-letters-when-no-subscribers = on

  # The id of the dispatcher to use for DistributedPubSubMediator actors.
  # If not specified default dispatcher is used.
  # If specified you need to define the settings of the actual dispatcher.
  use-dispatcher = ""
}
akka.http.server.request-timeout = 300s

serverapp.akka.remote.netty.tcp.port = 2552
clientapp.akka.remote.netty.tcp.port = 2553
paypal.akka.remote.netty.tcp.port = 2554
statisticsapp.akka.remote.netty.tcp.port = 2555
